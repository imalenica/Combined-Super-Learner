group_by(Event) %>%
summarise_at(vars(past), funs(mean(., na.rm=TRUE)))
test<-fit_coef_all %>%
group_by(Event) %>%
summarise_at(vars(past), funs(mean(., na.rm=TRUE)))
View(test)
#Are there differences in the length of past relevant if you had event/did not have event?
fit_coef_all %>% group_by(Event) %>% summarise_at(vars(past), funs(mean(., na.rm=TRUE)))
#How many samples with AR terms?
grep(names(fit_coef_all),"ar")
#How many samples with AR terms?
grep("ar",names(fit_coef_all))
#How many samples with AR terms?
fit_coef_all[,grep("ar",names(fit_coef_all))]
#How many samples with AR terms?
rowSums(!is.na(fit_coef_all[,grep("ar",names(fit_coef_all))]))
#How many samples with AR terms?
fit_coef_all$ar<-rowSums(!is.na(fit_coef_all[,grep("ar",names(fit_coef_all))]))
fit_coef_all$ma<-rowSums(!is.na(fit_coef_all[,grep("ma",names(fit_coef_all))]))
View(fit_coef_all)
write.csv(fit_coef_all, here::here("Results/ARIMA_fits_n500.csv"))
fit_coef_all %>% group_by(Event) %>% summarise_at(vars(ar), funs(mean(., na.rm=TRUE)))
fit_coef_all %>% group_by(Event) %>% summarise_at(vars(ma), funs(mean(., na.rm=TRUE)))
write.csv(fit_coef_all, here::here("Results/ARIMA_fits_n500.csv"), quote = FALSE, row.names = FALSE)
library(sl3)
library(origami)
library(lsei)
library(here)
library(SuperLearner)
library(dplyr)
require(rlist)
source(here("R/CombinedOnlineSL.R"))
#Load necessary libraries:
library(sl3)
library(origami)
library(lsei)
library(here)
library(SuperLearner)
library(dplyr)
require(rlist)
source(here::here("R/CombinedOnlineSL.R"))
source(here::here("R/utils_mimic.R"))
#Load the data:
#(there are 1276 subjects)
data<-load(here::here("Data/data.Rdata"))
#Pick 500 samples that have period 1,2 3, 4 and 5:
train_all <- sample_n_t(df, n = 500, t=5)
#PROBLEM: How to deal with missing values?
#NAs: sapsi_first,sofa_first, bmi, los_hospital
summary(train_all)
train_all <- train_all[,-c(2,6,7,8,10,12)]
#Convert character to numeric:
#gender, admission_type_descr
train_all$gender <- ifelse(train_all$gender=="M",1,0)
#Specify the covariates and outcome:
outcome <- "event"
covars_wbaseline <- c("gender","age","care_unit",
"los_icu","amine","sedation","ventilation","spo2","abpsys",
"abpdias","abpmean")
covars <- c("los_icu","amine","sedation","ventilation","spo2","abpsys","abpdias","abpmean")
train_all <- new_Y_sol1(train_all = train_all)
train_all <- new_Y_sol1(train_all = train_all)
train_all <- new_Y_sol2(train_all = train_all)
train_all <- new_Y_sol1(train_all = train_all)
train_all <- new_Y_sol2(train_all = train_all)
#Redefine EVENT as "Y1" (use the new definition of the outcome):
outcome <- "Y1"
#Smallest time window we consider:
t1<-20
#Largest time window we consider:
t2<-240
#How many minutes in the future the prediction occurs?
h<-30
#Gap between training and prediction.
#Note that at hour marks, there is a natural 30 minute gap.
#But if we train at 20 minutes, there is not.
gap=0
#Number of learners
lrn<-7
#Size of the initial training set:
first_window=10
#Size of the test set:
test_size=10
#Increase the size of the training set by this ammount:
mini_batch=5
#Get all the individual samples:
samples <- unique(train_all$subject_id)
t=20
h
gap=30
first_window
test_size
mini_batch
num_p<-(t+h)-(t)
#Get all the individual samples:
samples <- unique(train_all$subject_id)
#Train the Global SLs:
global_SL_t<-global_SL(t=t)
#Train the Global SLs:
global_SL_t<-global_SL(t=t)
source('~/Dropbox/Berkeley_Projects/Romain/Combined Super Learner/R/CombinedOnlineSL.R', echo=TRUE)
#Train the Global SLs:
global_SL_t<-global_SL(t=t)
### Learners as is:
#Create a grid for xgboost:
grid_params = list(nrounds = c(100, 500),
eta = c(0.001, 0.01, 0.1))
grid = expand.grid(grid_params, KEEP.OUT.ATTRS = FALSE)
params_default = list(nthread = getOption("sl.cores.learners", 1))
xgb_learners = apply(grid, MARGIN = 1, function(params_tune) {
do.call(Lrnr_xgboost$new, c(params_default, as.list(params_tune)))
})
lrnr_glmnet <- make_learner(Lrnr_glmnet)
lrnr_glm <- Lrnr_glm_fast$new()
# A stack combines multiple learners by training them simultaneously
# their predictions can be either combined, or compared.
stack <- make_learner(
Stack, lrnr_glm, xgb_learners[[1]], xgb_learners[[2]], xgb_learners[[3]],
xgb_learners[[4]], xgb_learners[[5]], xgb_learners[[6]]
)
### Learners with screeners:
screen_cor <- Lrnr_pkg_SuperLearner_screener$new("screen.corP")
cor_pipeline <- make_learner(Pipeline, screen_cor, stack)
stack_screen <- make_learner(Stack, cor_pipeline, stack)
###Regular Super-Learner option:
metalearner <- make_learner(Lrnr_nnls)
sl <- Lrnr_sl$new(learners = stack, metalearner = metalearner)
#Train the Global SLs:
global_SL_t<-global_SL(t=t)
load("~/Dropbox/Berkeley_Projects/Romain/Combined Super Learner/Results/TimeStep_t60.Rdata")
x$losses_all
#Load necessary libraries:
library(sl3)
library(origami)
library(lsei)
library(here)
library(SuperLearner)
library(dplyr)
require(rlist)
source(here::here("R/CombinedOnlineSL.R"))
source(here::here("R/utils_mimic.R"))
#Load the data:
#(there are 1276 subjects)
data<-load(here::here("Data/data.Rdata"))
View(df)
View(df)
options(warn=-1)
suppressMessages(library(xtable))
suppressMessages(library(here))
suppressMessages(library(pROC))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(reshape))
options(xtable.comment = FALSE)
#Load the data:
load(here("Results/TimeStep_t20.Rdata"))
res_t20<-x
load(here("Results/TimeStep_t30.Rdata"))
res_t30<-x
load(here("Results/TimeStep_t60.Rdata"))
res_t60<-x
load(here("Results/TimeStep_t90.Rdata"))
res_t90<-x
load(here("Results/TimeStep_t120.Rdata"))
res_t120<-x
load(here("Results/TimeStep_t150.Rdata"))
res_t150<-x
load(here("Results/TimeStep_t180.Rdata"))
res_t180<-x
load(here("Results/TimeStep_t240.Rdata"))
res_t240<-x
suppressMessages(library(xtable))
suppressMessages(library(here))
suppressMessages(library(pROC))
options(xtable.comment = FALSE)
load(here("Results/Trained60_gap0_h20_n200.Rdata"))
res<-x
#Get all predictions in a data-frame:
preds_fin<-as.data.frame(res$preds_fin)
preds_regSL<-as.data.frame(res$pred_regular_SL)
preds_indSL<-as.data.frame(res$pred_regular_individual_SL)
truth<-as.data.frame(res$truth)
names(preds_regSL)<-names(preds_fin)
#names(preds_indSL)<-names(preds_fin)
names(truth)<-names(preds_fin)
#AUC over ALL validation time-points
pred_fin<-data.frame(pred=unlist(preds_fin))
pred_regSL<-data.frame(pred=unlist(preds_regSL))
#pred_indSL<-data.frame(pred=unlist(preds_indSL))
truth<-data.frame(truth=unlist(truth))
#(averaged over time and all samples):
loss<-colMeans(res$losses_all)
names(loss)<-names(res$losses_all)
#Look at the weights as an average over all samples:
weights<-as.data.frame(res$fit_coef)
toDelete <- seq(1, dim(weights)[2], 2)
weights <-  weights[,-toDelete]
weight<-data.frame(rowMeans(weights))
names(weight)<-"Coefficient"
row.names(weight)<-res$fit_coef[[1]]$learners
weight<-weight/sum(weight)
weight_lrn<-cbind.data.frame(Learner=res$fit_coef[[1]]$learners,Coefficients=weight)
weight<-weight_lrn[order(weight, decreasing = TRUE),1:2]
par(pty="s")
roc(truth$truth, pred_fin$pred, plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main="Combined Online Super Learner")
test<-truth$truth
#test[1:500]<-rbinom(500,size = 1, prob = 0.5)
test<-truth$truth
pROC::plot.roc(test, pred_regSL$pred, col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
truth$truth
View(preds_fin)
View(truth)
#Look at differences per samples:
preds_fin<-as.data.frame(res$preds_fin)
preds_regSL<-as.data.frame(res$pred_regular_SL)
truth<-as.data.frame(res$truth)
names(preds_regSL)<-names(preds_fin)
names(truth)<-names(preds_fin)
View(preds_fin)
View(truth)
View(pred_regSL)
res$pred_regular_SL
preds_regSL<-as.data.frame(res$pred_regular_SL)
suppressMessages(library(xtable))
suppressMessages(library(here))
suppressMessages(library(pROC))
options(xtable.comment = FALSE)
load(here("Results/Trained60_gap0_h20_n200.Rdata"))
res<-x
#Look at differences per samples:
preds_fin<-as.data.frame(res$preds_fin)
preds_regSL<-as.data.frame(res$pred_regular_SL)
truth<-as.data.frame(res$truth)
names(preds_regSL)<-names(preds_fin)
names(truth)<-names(preds_fin)
View(preds_fin)
View(preds_regSL)
names(preds_fin)
#Pick a sample: Sample491
sample<-"Sample491"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_fin_sample
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
sample<-"Sample491"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample
truth_sample
preds_fin_sample[,1]
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main="Combined Online Super Learner")
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
table(truth_sample$Sample491)
table(truth_sample[,1])
sample<-"Sample1485"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
#Number of episodes:
table(truth_sample[,1])
### Pick a sample: Sample1485
sample<-"Sample1485"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
#### Pick a sample: Sample491
sample<-"Sample491"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
### Pick a sample: Sample1485
sample<-"Sample1485"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
sample<-"Sample2185"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
#Number of episodes:
table(truth_sample[,1])
sample<-"Sample4149"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
table(truth_sample[,1])
sample<-"Sample4194"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
#Number of episodes:
table(truth_sample[,1])
sample<-"Sample4266"
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
#Perhaps plot for all samples that had at least one event:
colSums(truth)
#Perhaps plot for all samples that had at least one event:
event<-ifelse(colSums(truth)>0,1,0)
event
#Perhaps plot for all samples that had at least one event:
event<- ifelse(colSums(truth)>0,1,0)
#Perhaps plot for all samples that had at least one event:
event<- cbind.data.frame(Sample=names(truth),event=ifelse(colSums(truth)>0,1,0))
View(event)
event1<-event$Sample[event$event==1]
event1
1:length(event1)
event1[1]
str(event1)
samples_with_event<-event$Sample[event$event==1]
samples_with_event<-as.numeric(levels(samples_with_event))[samples_with_event]
samples_with_event
event<- cbind.data.frame(Sample=names(truth),event=ifelse(colSums(truth)>0,1,0))
samples_with_event<-event$Sample[event$event==1]
str(samples_with_event)
levels(samples_with_event)
as.numeric(levels(samples_with_event))
as.character(levels(samples_with_event))
as.character(levels(samples_with_event))[samples_with_event]
samples_with_event<-as.character(levels(samples_with_event))[samples_with_event]
length(samples_with_even)
length(samples_with_event)
i=1
sample<-samples_with_event[i]
sample
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
View(preds_fin_sample)
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
episodes<-matrix(NA,nrow = length(samples_with_event), ncol = 2)
episodes<-data.frame(matrix(NA,nrow = length(samples_with_event), ncol = 2))
row.names(episodes)<-samples_with_event
View(episodes)
#Number of episodes:
episodes[i,]<-table(truth_sample[,1])
View(episodes)
names(episodes)<-c("0","1")
truth_sample
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
for(i in 1:length(samples_with_event)){
sample<-samples_with_event[i]
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
episodes[i,]<-table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
}
sample
preds_fin_sample
sample<-samples_with_event[i]
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
episodes[i,]<-table(truth_sample[,1])
par(pty="s")
truth_sample[,1]
truth_sample
View(truth_sample)
sample
samples_with_event
event<- cbind.data.frame(Sample=names(truth),event=ifelse(colSums(truth)>0,1,0))
samples_with_event<-event$Sample[event$event==1]
samples_with_event<-as.character(levels(samples_with_event))[samples_with_event]
episodes<-data.frame(matrix(NA,nrow = length(samples_with_event), ncol = 2))
row.names(episodes)<-samples_with_event
names(episodes)<-c("0","1")
samples_with_event
i=1
sample<-samples_with_event[i]
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
episodes[i,]<-table(truth_sample[,1])
View(truth_sample)
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
for(i in 1:length(samples_with_event)){
sample<-samples_with_event[i]
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
episodes[i,]<-table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
}
#Look at differences per samples:
preds_fin<-as.data.frame(res$preds_fin)
preds_regSL<-as.data.frame(res$pred_regular_SL)
truth<-as.data.frame(res$truth)
names(preds_regSL)<-names(preds_fin)
names(truth)<-names(preds_fin)
#Perhaps plot for all samples that had at least one event:
event<- cbind.data.frame(Sample=names(truth),event=ifelse(colSums(truth)>0,1,0))
samples_with_event<-event$Sample[event$event==1]
samples_with_event<-as.character(levels(samples_with_event))[samples_with_event]
episodes<-data.frame(matrix(NA,nrow = length(samples_with_event), ncol = 2))
row.names(episodes)<-samples_with_event
names(episodes)<-c("0","1")
for(i in 1:length(samples_with_event)){
sample<-samples_with_event[i]
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
episodes[i,]<-table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
}
i
samples_with_event[i]
View(event)
View(truth)
#Perhaps plot for all samples that had at least one event:
event<- cbind.data.frame(Sample=names(truth),event=ifelse(colSums(truth)>0 & colSums(truth)<nrow(truth),1,0))
samples_with_event<-event$Sample[event$event==1]
samples_with_event<-as.character(levels(samples_with_event))[samples_with_event]
samples_with_event
#Look at differences per samples:
preds_fin<-as.data.frame(res$preds_fin)
preds_regSL<-as.data.frame(res$pred_regular_SL)
truth<-as.data.frame(res$truth)
names(preds_regSL)<-names(preds_fin)
names(truth)<-names(preds_fin)
#Perhaps plot for all samples that had at least one event:
event<- cbind.data.frame(Sample=names(truth),event=ifelse(colSums(truth)>0 & colSums(truth)<nrow(truth),1,0))
samples_with_event<-event$Sample[event$event==1]
samples_with_event<-as.character(levels(samples_with_event))[samples_with_event]
episodes<-data.frame(matrix(NA,nrow = length(samples_with_event), ncol = 2))
row.names(episodes)<-samples_with_event
names(episodes)<-c("0","1")
for(i in 1:length(samples_with_event)){
sample<-samples_with_event[i]
preds_fin_sample<-preds_fin[names(preds_fin)==sample]
preds_regSL_sample<-preds_regSL[names(preds_regSL)==sample]
truth_sample<-truth[names(truth)==sample]
#Number of episodes:
episodes[i,]<-table(truth_sample[,1])
par(pty="s")
roc(truth_sample[,1], preds_fin_sample[,1], plot=TRUE, col="#377eb8", lwd=4, print.auc=TRUE, main=paste("Combined Online Super Learner for", sample, sep = " "))
pROC::plot.roc(truth_sample[,1], preds_regSL_sample[,1], col="#4daf4a", lwd=4, print.auc=TRUE, add=TRUE, print.auc.y=0.3)
legend("bottomright", legend=c("Combined SL", "Regular SL"), col=c("#377eb8", "#4daf4a"), lwd=4)
}
episodes
