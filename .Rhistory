wd()
here()
library(here)
library(forecast)
library(kableExtra)
install.packages("kable")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
plot_multi <- function(multi_forecast, test_outcome) {
return(multi_forecast %>%
autoplot() +
geom_line(aes(x = as.numeric(time(test_outcome)),
y = as.numeric(test_outcome)),
col = "black"))
}
plot_onestep <- function(multi_forecast, test_outcome) {
return(onestep_forecast %>%
autoplot() +
geom_line(aes(x = as.numeric(time(test_outcome)),
y = as.numeric(test_outcome)),
col = "black"))
}
plot_all <- function(multi_forecast, onestep_forecast, test_outcome) {
return(ggplot() +
geom_line(aes(x = as.numeric(time(test_outcome)),
y = as.numeric(test_outcome)),
col = "black") +
geom_line(aes(x = as.numeric(time(onestep_forecast)),
y = as.numeric(onestep_forecast)),
col = "red") +
geom_line(aes(x = as.numeric(time(multi_forecast)),
y = as.numeric(multi_forecast)),
col = "blue") +
scale_color_discrete(name = "Forecasts", labels = c("truth",
"onestep",
"multi")))
}
plot_multi(multi_forecast = arima_abpmean$plot_data[[1]]$multi_forecast,
test_outcome = arima_abpmean$plot_data[[1]]$test_outcome)
load(here::here("Results", "arima_abpmean.RData"))
load(here::here("Results", "arima_abpsys.RData"))
load(here::here("Results", "arima_abpdias.RData"))
plot_multi(multi_forecast = arima_abpmean$plot_data[[1]]$multi_forecast,
test_outcome = arima_abpmean$plot_data[[1]]$test_outcome)
arima_abpmean$plot_data[[1]]$test_outcome
summary(arima_abpmean)
summary(arima_abpmean$plot_data)
summary(arima_abpmean$plot_data[[1]])
summary(arima_abpmean$plot_data[[1]]$test)
arima_abpmean$plot_data[[1]]$test
plot_multi(multi_forecast = arima_abpmean$plot_data[[1]]$multi_forecast,
test_outcome = arima_abpmean$plot_data[[1]]$test)
plot_onestep(onestep_forecast = arima_abpmean$plot_data[[1]]$onestep_forecast,
test_outcome = arima_abpmean$plot_data[[1]]$test)
library(ggplot2)
plot_multi <- function(multi_forecast, test_outcome) {
return(multi_forecast %>%
autoplot() +
geom_line(aes(x = as.numeric(time(test_outcome)),
y = as.numeric(test_outcome)),
col = "black"))
}
plot_onestep <- function(onestep_forecast, test_outcome) {
return(onestep_forecast %>%
autoplot() +
geom_line(aes(x = as.numeric(time(test_outcome)),
y = as.numeric(test_outcome)),
col = "black"))
}
plot_all <- function(multi_forecast, onestep_forecast, test_outcome) {
return(ggplot() +
geom_line(aes(x = as.numeric(time(test_outcome)),
y = as.numeric(test_outcome)),
col = "black") +
geom_line(aes(x = as.numeric(time(onestep_forecast)),
y = as.numeric(onestep_forecast)),
col = "red") +
geom_line(aes(x = as.numeric(time(multi_forecast)),
y = as.numeric(multi_forecast)),
col = "blue") +
scale_color_discrete(name = "Forecasts", labels = c("truth",
"onestep",
"multi")))
}
plot_onestep(onestep_forecast = arima_abpmean$plot_data[[1]]$onestep_forecast,
test_outcome = arima_abpmean$plot_data[[1]]$test)
plot_all(onestep_forecast = arima_abpmean$plot_data[[1]]$onestep_forecast,
multi_forecast = arima_abpmean$plot_data[[1]]$multi_forecast,
test_outcome = arima_abpmean$plot_data[[1]]$test)
test_outcome = arima_abpmean$plot_data[[1]]$test
multi_forecast = arima_abpmean$plot_data[[1]]$multi_forecast
multi_forecast
onestep_forecast = arima_abpmean$plot_data[[1]]$onestep_forecast
onestep_forecast
plot_all(onestep_forecast = arima_abpmean$plot_data[[1]]$onestep_forecast,
multi_forecast = arima_abpmean$plot_data[[1]]$multi_forecast$Forecast,
test_outcome = arima_abpmean$plot_data[[1]]$test)
arima_abpmean$plot_data[[1]]$multi_forecast$Forecast
colnames(multi_forecast)
class(multi_forecast)
data.frame(multi_forecast)
class(arima_abpmean$plot_data[[1]]$onestep_forecast)
arima_abpmean$plot_data[[1]]$multi_forecast[,1]
multi_forecast[,1]
plot_all(onestep_forecast = arima_abpmean$plot_data[[1]]$onestep_forecast,
multi_forecast = data.frame(arima_abpmean$plot_data[[1]]$multi_forecast)[,1],
test_outcome = arima_abpmean$plot_data[[1]]$test)
install.packages('tinytex')
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
options(tinytex.verbose = TRUE)
plot(arima_abpmean$plot_data[[1]]$multi_forecast,
main = "Multi-step ARIMA Forecasts with Mean BP Outcome")
plot(arima_abpmean$plot_data[[1]]$multi_forecast,
main = "Multi-step ARIMA Forecasts with Mean BP Outcome")
load(here::here("Results", "arima_abpmean.RData"))
load(here::here("Results", "arima_abpsys.RData"))
load(here::here("Results", "arima_abpdias.RData"))
coef_sys <- t(head(arima_abpsys$coefficients, 8))
colnames(coef_sys) <- coef_sys[1,]
coef_sys <- coef_sys[-1,]
class(coef_sys)
View(coef_sys)
round(coef_sys, 4)
apply(coef_sys, 2, round, 4)
apply(coef_sys, 2, as.numeric)
colnames(coef_mean)
coef_mean <- t(head(arima_abpmean$coefficients, 8))
colnames(coef_mean) <- coef_mean[1,]
coef_mean <- coef_mean[-1,]
coef_mean <- apply(coef_mean, 2, as.numeric)
colnames(coef_mean)
rownames(coef_mean)
View(coef_mean)
coef_mean <- t(head(arima_abpmean$coefficients, 8))
colnames(coef_mean) <- coef_mean[1,]
coef_mean <- coef_mean[-1,]
View(coef_mean)
rownames(coef_mean)
coef_mean <- t(head(arima_abpmean$coefficients, 8))
colnames(coef_mean) <- coef_mean[1,]
coef_mean <- coef_mean[-1,]
names <- rownames(coef_mean)
coef_mean <- apply(coef_mean, 2, as.numeric)
rownames(coef_mean) <- names
View(coef_mean)
